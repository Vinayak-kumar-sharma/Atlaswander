<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <!-- Page Title -->
  <title><%= state.name %>, <%= countryCode %> | AtlasWander</title>

  <!-- SEO Description -->
  <meta name="description" content="Detailed information about <%= state.name %> in <%= countryCode %>, including location, coordinates, and map view." />
  <meta name="keywords" content="<%= state.name %>, <%= countryCode %>, state map, coordinates, AtlasWander, state geography, location data" />
  <meta name="author" content="Vinayak Kumar Sharma" />

  <!-- Canonical Link -->
  <link rel="canonical" href="https://atlaswander.up.railway.app" />

  <!-- Open Graph Meta -->
  <meta property="og:title" content="<%= state.name %>, <%= countryCode %> – AtlasWander" />
  <meta property="og:description" content="Explore maps and key coordinates of <%= state.name %> in <%= countryCode %> on AtlasWander." />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://atlaswander.up.railway.app" />

  <meta property="og:image" content="/img/round-icons-UEz0Y7Ls-Rc-unsplash.png" />

  <!-- Twitter Meta -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="<%= state.name %>, <%= countryCode %> | AtlasWander" />
  <meta name="twitter:description" content="Check out <%= state.name %>'s location and map in <%= countryCode %>." />

  <meta name="twitter:image" content="/img/round-icons-UEz0Y7Ls-Rc-unsplash.png" />


  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<!-- 
  <style>
    :root {
      --primary: #0f172a;
      --accent: #38bdf8;
      --bg-gradient: linear-gradient(to right, #0f172a, #1e293b);
      --card-bg: rgba(255, 255, 255, 0.07);
      --glass-blur: blur(8px);
    }

    * {
      box-sizing: border-box;
    }

    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background: var(--bg-gradient);
      color: #e2e8f0;
    }

    h1, h2 {
      text-align: center;
      color: #f1f5f9;
    }

    .state-hero {
      padding: 3rem 1rem;
      background: linear-gradient(135deg, #38bdf8 0%, #0ea5e9 100%);
      color: white;
      text-align: center;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    }

    .state-hero h1 {
      font-size: 2.8rem;
      margin: 0;
    }

    .state-hero p {
      font-size: 1.2rem;
      opacity: 0.85;
    }

    .map-section {
      padding: 2rem 1rem;
    }

    #stateMap {
      width: 100%;
      height: 450px;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.4);
    }

    .cities-list {
      padding: 2rem 1rem;
      max-width: 1300px;
      margin: auto;
    }

    .cities-list h2 {
      margin-bottom: 2rem;
    }

    .cities-list ul {
      list-style: none;
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
      gap: 20px;
    }

    .cities-list li {
      background: var(--card-bg);
      backdrop-filter: var(--glass-blur);
      border-radius: 12px;
      padding: 1rem;
      text-align: center;
      font-weight: 500;
      color: #e2e8f0;
      box-shadow: 0 2px 6px rgba(255,255,255,0.05);
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .cities-list li:hover {
      transform: translateY(-5px) scale(1.03);
      background-color: #0ea5e933;
      box-shadow: 0 6px 16px rgba(56, 189, 248, 0.3);
    }

    @media (max-width: 768px) {
      .cities-list ul {
        grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
      }
    }

.city-search-input {
  width: 100%;
  padding: 0.8rem 1rem;
  margin-bottom: 1rem;
  border-radius: 8px;
  border: 1px solid #cbd5e1;
  font-size: 1rem;
  background-color: #f1f5f9;
}

.cities-scroll-container {
  max-height: 500px;
  overflow-y: auto;
  padding-right: 10px;
  border-radius: 10px;
  border: 1px solid #e2e8f0;
  background: rgba(255, 255, 255, 0.8);
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.06);
}

.cities-scroll-container::-webkit-scrollbar {
  width: 8px;
}
.cities-scroll-container::-webkit-scrollbar-thumb {
  background-color: #94a3b8;
  border-radius: 4px;
}

.cities-scroll-container ul {
  list-style: none;
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 12px;
}

.city-item {
  background: #ffffff;
  padding: 1rem;
  border-radius: 8px;
  box-shadow: 0 1px 4px rgba(0,0,0,0.08);
  transition: transform 0.2s ease, background 0.2s;
  cursor: pointer;
  text-align: center;
}
.city-item:hover {
  transform: translateY(-4px);
  background-color: #e2e8f0;
}
.cities-list {
  padding: 2rem 1rem;
  max-width: 1300px;
  margin: auto;
}

.city-search-input {
  width: 100%;
  padding: 0.8rem 1rem;
  margin-bottom: 1rem;
  border-radius: 8px;
  border: none;
  font-size: 1rem;
  background-color: #f8fafc;
  color: #1e293b;
  box-shadow: 0 1px 4px rgba(0,0,0,0.1);
}

.city-search-input::placeholder {
  color: #64748b;
}

.cities-scroll-container {
  max-height: 500px;
  overflow-y: auto;
  padding-right: 8px;
  border-radius: 10px;
  border: 1px solid #e2e8f0;
  background: rgba(255, 255, 255, 0.1);
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.05);
  backdrop-filter: blur(6px);
}

.cities-scroll-container::-webkit-scrollbar {
  width: 8px;
}
.cities-scroll-container::-webkit-scrollbar-thumb {
  background-color: #94a3b8;
  border-radius: 4px;
}

.cities-scroll-container ul {
  list-style: none;
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
  gap: 14px;
}

/* ==== Individual City Card ==== */
.city-item {
  background: #ffffff;
  color: #1e293b;
  padding: 1rem;
  border-radius: 10px;
  font-weight: 600;
  font-size: 1rem;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
  text-align: center;
  cursor: pointer;
  transition: transform 0.2s ease, background 0.3s ease;
}

.city-item:hover {
  background-color: #e2e8f0;
  transform: translateY(-4px) scale(1.02);
  box-shadow: 0 6px 16px rgba(56, 189, 248, 0.2);
}

/* Responsive */
@media (max-width: 768px) {
  .cities-scroll-container ul {
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
  }
}

  </style> -->
  <style>
  :root {
    --primary: #0f172a;
    --accent: #38bdf8;
    --bg-gradient: linear-gradient(to right, #0f172a, #1e293b);
    --card-bg: rgba(255, 255, 255, 0.07);
    --glass-blur: blur(8px);
  }
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
header {
  padding: 1rem 2rem;
  background-color: #1e293b;
  color: #ffffff;
  text-align: center;
}

header h1 {
  font-size: 2rem;
  margin: 0.5rem 0;
}

header p {
  font-size: 1rem;
  margin: 0.25rem 0 1rem;
}
.site-brand {
  margin-top: 1rem;
}

.home-link {
  color: #ffffff;
  text-decoration: none;
  font-size: 1.1rem;
  font-weight: bold;
  background-color: #0f172a;
  padding: 0.5rem 1rem;
  border-radius: 8px;
  display: inline-block;
  transition: background 0.3s ease;
}

.home-link:hover {
  background-color: #334155;
  text-decoration: none;
}
footer {
  padding: 1rem 2rem;
  background-color: #1e293b;
  color: #ffffff;
  text-align: center;
}
  body {
    margin: 0;
    font-family: 'Segoe UI', sans-serif;
    background: var(--bg-gradient);
    color: #e2e8f0;
  }

  h1, h2 {
    text-align: center;
    color: #f1f5f9;
  }

  .state-hero {
    padding: 3rem 1rem;
    color: white;
    text-align: center;
    box-shadow: 0 4px 12px rgba(0,0,0,0.2);
  } 

  .state-hero h1 {
    font-size: 2.8rem;
    margin: 0;
  }

  .state-hero p {
    font-size: 1.2rem;
    opacity: 0.85;
  }

  .map-section {
      margin: 3rem auto;
      max-width: 1280px;
      padding: 0 1rem;
  }

  #stateMap {
    height: 60vh;
    min-height: 400px;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 4px 12px rgba(0,0,0,0.4);
  }

  .cities-list {
    padding: 2rem 1rem;
    max-width: 1300px;
    margin: auto;
  }

  .cities-list h2 {
    margin-bottom: 2rem;
  }

  .city-search-input {
    width: 100%;
    padding: 0.8rem 1rem;
    margin-bottom: 1rem;
    border-radius: 8px;
    border: none;
    font-size: 1rem;
    background-color: #f8fafc;
    color: #1e293b;
    box-shadow: 0 1px 4px rgba(0,0,0,0.1);
  }

  .city-search-input::placeholder {
    color: #64748b;
  }

  .cities-scroll-container {
    max-height: 500px;
    overflow-y: auto;
    padding-right: 8px;
    border-radius: 10px;
    border: 1px solid #e2e8f0;
    background: rgba(255, 255, 255, 0.1);
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.05);
    backdrop-filter: blur(6px);
  }

  .cities-scroll-container::-webkit-scrollbar {
    width: 8px;
  }

  .cities-scroll-container::-webkit-scrollbar-thumb {
    background-color: #94a3b8;
    border-radius: 4px;
  }

  .cities-scroll-container ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    gap: 14px;
  }

  .city-item {
    background: #ffffff;
    color: #1e293b;
    padding: 1rem;
    border-radius: 10px;
    font-weight: 600;
    font-size: 1rem;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
    text-align: center;
    cursor: pointer;
    transition: transform 0.2s ease, background 0.3s ease;
  }

  .city-item:hover {
    background-color: #e2e8f0;
    transform: translateY(-4px) scale(1.02);
    box-shadow: 0 6px 16px rgba(56, 189, 248, 0.2);
  }

  @media (max-width: 768px) {
    header, footer {
    padding: 1rem;
    font-size: 0.9rem;
  }
    .cities-scroll-container ul {
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    }
  }
.climate-card-container {
  margin-top: 1.5rem;
  display: flex;
  justify-content: center;
}

.climate-inline-card {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1rem;
  padding: 1rem 1.5rem;
  background: rgba(255, 255, 255, 0.08);
  border-radius: 16px;
  backdrop-filter: blur(8px);
  color: #f8fafc;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  font-weight: 500;
  font-size: 0.95rem;
  text-align: center;
}

.climate-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.05);
  box-shadow: 0 1px 4px rgba(255, 255, 255, 0.05);
}

.climate-item img {
  width: 32px;
  height: 32px;
}
.state-title {
  font-size: 3rem;
  font-weight: 800;
  display: inline-block; /* REQUIRED for background-clip to work */
  background: linear-gradient(90deg, #38bdf8, #0ea5e9);
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 6px rgba(56, 189, 248, 0.5);
  margin-bottom: 0.5rem;
  letter-spacing: 1px;
}


.country-code {
  font-size: 1.15rem;
  color: #e2e8f0;
  opacity: 0.9;
  letter-spacing: 0.3px;
  font-weight: 500;
  text-shadow: 0 0 4px rgba(255, 255, 255, 0.15);
  margin-top: 0;
}

</style>

</head>
<body>
<header>
    <h1>🗺️ Atlas Wander</h1>
    <p>Explore the unseen: From climates to creatures to cultures.</p>
    <div class="site-brand">
    <a href="/" class="home-link">Back to Home</a>
    </div>
</header>
  <section class="state-hero">
  <h1 class="state-title"><%= state.name %> (<%= stateCode %>)</h1>
<p class="country-code">🌐 Country Code: <%= countryCode %></p>

  
  <!-- Climate data container (will be filled by JS) -->
  <div id="climateInfo" class="climate-card-container"></div>
</section>

  <!-- <section class="cities-list">
    <h2>🏙 Cities in <%= state.name %></h2>
    <% if (cities.length) { %>
      <ul>
        <% cities.forEach(city => { %>
          <li 
            class="city-item"
            data-lat="<%= city.latitude %>"
            data-lon="<%= city.longitude %>"
            data-name="<%= city.name %>"
          >
            <%= city.name %>
          </li>
        <% }) %>
      </ul>
    <% } else { %>
      <p style="text-align: center; opacity: 0.8;">No city data available.</p>
    <% } %>
  </section> -->

  

  <section class="map-section">
    <h2>🗺️ State Map</h2>
    <div id="stateMap"></div>
  </section>

  <section class="cities-list">
  <h2>🏙 Cities in <%= state.name %></h2>

  <input
    type="text"
    id="citySearch"
    placeholder="🔍 Search city..."
    class="city-search-input"
  />

  <% if (cities.length) { %>
    <div class="cities-scroll-container">
      <ul id="cityList">
        <% cities.forEach(city => { %>
          <li 
            class="city-item"
            data-lat="<%= city.latitude %>"
            data-lon="<%= city.longitude %>"
            data-name="<%= city.name %>"
          >
            <%= city.name %>
          </li>
        <% }) %>
      </ul>
    </div>
  <% } else { %>
    <p style="text-align: center; opacity: 0.8;">No city data available.</p>
  <% } %>
</section>

  <!-- Footer -->
  <%- include('partials/footer') %>
  <!-- Leaflet JS -->
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
  <script>
    const lat = <%= state.latitude %>;
    const lon = <%= state.longitude %>;
    const stateName = "<%= state.name %>";

    const map = L.map('stateMap').setView([lat, lon], 6);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; OpenStreetMap contributors',
    }).addTo(map);

    // Initial marker
    L.marker([lat, lon])
      .addTo(map)
      .bindPopup(`📍 ${stateName}`)
      .openPopup();

    let cityMarker = null;
    document.querySelectorAll(".city-item").forEach(item => {
      item.addEventListener("click", () => {
        const cityLat = parseFloat(item.dataset.lat);
        const cityLon = parseFloat(item.dataset.lon);
        const cityName = item.dataset.name;

        if (cityMarker) map.removeLayer(cityMarker);

        cityMarker = L.marker([cityLat, cityLon])
          .addTo(map)
          .bindPopup(`📍 ${cityName}`)
          .openPopup();

        map.setView([cityLat, cityLon], 9);
      });
    });
    const searchInput = document.getElementById("citySearch");
  const cityItems = document.querySelectorAll("#cityList .city-item");

  searchInput.addEventListener("input", () => {
    const query = searchInput.value.toLowerCase();
    cityItems.forEach(item => {
      const cityName = item.textContent.toLowerCase();
      item.style.display = cityName.includes(query) ? "block" : "none";
    });
  });

  document.querySelectorAll('.city-item').forEach(item => {
  item.addEventListener('click', () => {
    const lat = item.dataset.lat;
    const lon = item.dataset.lon;
    const name = item.dataset.name;

    
    // Use lat, lon for fetching data or showing on map
    async function loadClimateData(lat, lon) {
    try {
      const res = await fetch(`/api/areaclimate?lat=${lat}&lon=${lon}`);
      const data = await res.json();

      const container = document.getElementById('climateInfo');
      if (!container) return;

      container.innerHTML = `
  <div class="climate-inline-card">
    <div class="climate-item">
      <img src="${data.icon}" alt="Icon" />
      <div>${data.weather}</div>
    </div>
    <div class="climate-item">🌡️ Temp: ${data.temperature}°C</div>
    <div class="climate-item">🤒 Feels Like: ${data.feels_like}°C</div>
    <div class="climate-item">💧 Humidity: ${data.humidity}%</div>
    <div class="climate-item">🌬 Wind: ${data.wind_speed} m/s</div>
    <div class="climate-item">📍 [${data.coordinates.lat}, ${data.coordinates.lon}]</div>
  </div>
`;

    } catch (error) {
      console.error('Failed to fetch climate data:', error);
    }
  }

  loadClimateData(lat, lon);
  });
});

  

  </script>
</body>
</html>
