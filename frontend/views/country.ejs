<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title><%= name %> | AtlasWander</title>
  <meta name="description" content="Explore detailed data about <%= name %>, including its capital city, population, region, languages, weather, biodiversity, and more." />
  <meta name="keywords" content="<%= name %>, country data, <%= region %>, atlas, population, climate, map, biodiversity" />
  <meta name="author" content="Vinayak Kumar Sharma" />

  <!-- Canonical URL -->
  <link rel="canonical" href="https://atlaswander.up.railway.app" />

  <!-- Open Graph (for social sharing) -->
  <meta property="og:title" content="<%= name %> | AtlasWander" />
  <meta property="og:description" content="Learn key facts about <%= name %> including maps, weather, biodiversity, and more." />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://atlaswander.up.railway.app" />
  <meta property="og:image" content="/img/round-icons-UEz0Y7Ls-Rc-unsplash.png" />

  <!-- Twitter Card -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="<%= name %> | AtlasWander" />
  <meta name="twitter:description" content="maps,climate, geography, and biodiversity of <%= name %>." />
  <meta name="twitter:image" content="/img/round-icons-UEz0Y7Ls-Rc-unsplash.png" />
  <link rel="icon" type="image/x-icon" href="/img/favicon.png" />
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>
  <link rel="stylesheet" href="/css/country.css">
</head>
<body>

  <!-- Header -->
<header>
    <h1>🗺️ Atlas Wander</h1>
    <!-- <p>Explore the unseen: From climates to creatures to cultures.</p> -->
    <div class="site-brand">
    <a href="/" class="home-link">Back to Home</a>
    </div>
</header>

  <!-- Hero -->
  <!-- <section class="hero">
    <h1><%= name %></h1>
    <img src="<%= flag %>" alt="<%= name %> Flag" class="flag" />
    <div class="facts">
      <p><strong>Capital:</strong> <%= capital %></p>
      <p><strong>Region:</strong> <%= region %> – <%= subregion %></p>
      <p><strong>Population:</strong> <%= population.toLocaleString() %></p>
      <p><strong>Languages:</strong> <%= languages.join(", ") %></p>
      <p><strong>Currencies:</strong> <%= currencies.join(", ") %></p>
      <p><strong>Boders:</strong> <%= borders.join(", ") %></p>
      <p><strong>UN Member:</strong> <%= un_member ? "Yes" : "No" %></p>
    </div>
  </section> -->


  <section class="hero">
  <div class="hero-content">
    <!-- Flag section -->
    <div class="flag-container">
      <img src="<%= flag %>" alt="<%= name %> Flag" class="flag" id="flagImage" />
    </div>

    <!-- Text content -->
    <div class="facts">
      <h1><%= name.toUpperCase() %></h1>
      <p><strong>Capital:</strong> <%= capital %></p>
      <p><strong>Region:</strong> <%= region %> – <%= subregion %></p>
      <p><strong>Population:</strong> <%= population.toLocaleString() %></p>
      <p><strong>Languages:</strong> <%= languages.join(", ") %></p>
      <p><strong>Currencies:</strong> <%= currencies.join(", ") %></p>
      <p><strong>Borders:</strong> <%= borders.join(", ") %></p>
      <p><strong>UN Member:</strong> <%= un_member ? "Yes" : "No" %></p>
    </div>
  </div>

  <!-- Modal for the flag image -->
  <div id="modal" class="modal">
    <span class="close">&times;</span>
    <img class="modal-content" id="modalImage" />
  </div>
</section>


  <!-- Map -->
  <section class="map-section">
    <h2>🗺 Interactive Map</h2>
    <div id="dynamicMap"></div>
  </section>

  <!-- Map Links -->
  <section class="map-links">
    <h3>🔗 Explore on External Maps</h3>
    <ul id="mapLinks">
      <li><a href="https://www.google.com/maps/search/<%= name %>" target="_blank">Google Maps</a></li>
      <li><a href="https://www.openstreetmap.org/search?query=<%= name %>" target="_blank">OpenStreetMap</a></li>
      <li><a href="https://earth.google.com/web/search/<%= name %>" target="_blank">Google Earth</a></li>
    </ul>
  </section>

  <!-- Info Cards -->
<section class="climate-section">
  <h2>🌤 Climate Overview</h2>
  <div class="climate-summary" id="climateSummary">
    <!-- JS will fill this -->
  </div>
  <div class="climate-table-container" id="climateInfo">
    Loading climate data...
  </div>
</section>

<!-- Population Section -->
<section class="population-section">
  <h2>👥 Population Snapshot</h2>
  <div class="population-stats">
    <div class="stat-card">
      <h3>Total Population</h3>
      <p><%= population.toLocaleString() %></p>
    </div>
    <!-- Future additions: growth, density, etc. -->
  </div>
</section>

<!-- States Section -->
<section class="states-section">
  <h2>🏛 States </h2>
  <p id="totalStates">Loading states...</p>
  <div class="states-grid" id="statesGrid">
    <!-- JavaScript will populate this -->
  </div>
</section>


<!-- Wildlife Section -->
<section class="wildlife-section">
  <h2>🦁 Wildlife</h2>
  <div class="wildlife-grid" id="wildlifeInfo">
    Loading wildlife data...
  </div>
</section>


  <!-- Footer -->
  <%- include('partials/footer') %>

  <!-- Scripts -->
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
  <script>
  const lat = <%= coordinates.lat %>;
  const lon = <%= coordinates.lon %>;
  const countryName = "<%= name %>";
  const countryCode = "<%= countryCode %>";

  const map = L.map('dynamicMap').setView([lat, lon], 4);
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; OpenStreetMap contributors',
  }).addTo(map);

  L.marker([lat, lon]).addTo(map)
    .bindPopup(`📍 ${countryName}`)
    .openPopup();


  async function fetchExtraInfo() {
    try {
      // --- Climate Data ---
      const climateRes = await fetch(`/api/climate?country=${encodeURIComponent(countryName)}`);
      const climateData = await climateRes.json();
      const climate = climateData.climate;
      const climateInfo = document.getElementById("climateInfo");
      const climateSummary = document.getElementById("climateSummary");

      if (climate?.time?.length) {
        const avgMax = (climate.temperature_2m_max.reduce((a, b) => a + b, 0) / climate.temperature_2m_max.length).toFixed(1);
        const avgMin = (climate.temperature_2m_min.reduce((a, b) => a + b, 0) / climate.temperature_2m_min.length).toFixed(1);

        climateSummary.innerHTML = `
          <div><h4>Avg Max</h4><p>${avgMax} °C</p></div>
          <div><h4>Avg Min</h4><p>${avgMin} °C</p></div>
          <div><h4>Data Points</h4><p>${climate.time.length}</p></div>
        `;

        let table = `<table class="climate-table"><thead><tr><th>Date</th><th>Max (°C)</th><th>Min (°C)</th></tr></thead><tbody>`;
        for (let i = 0; i < climate.time.length; i++) {
          table += `<tr><td>${climate.time[i]}</td><td>${climate.temperature_2m_max[i]}</td><td>${climate.temperature_2m_min[i]}</td></tr>`;
        }
        table += "</tbody></table>";
        climateInfo.innerHTML = table;
      } else {
        climateInfo.textContent = "No climate data available.";
      }

      // --- Wildlife Data ---
      const wildlifeRes = await fetch(`/api/wildlife?countryCode=${encodeURIComponent(countryCode)}`);
      const wildlife = await wildlifeRes.json();
      const wildlifeContainer = document.getElementById("wildlifeInfo");
      wildlifeContainer.innerHTML = "";

      const species = wildlife.species || [];
      if (!species.length) {
        wildlifeContainer.textContent = "No wildlife data available.";
      } else {
        species.slice(0, 12).forEach(item => {
          const card = document.createElement("div");
          card.className = "wildlife-card";

          const fullImage = item.image_url || '/images/placeholder.jpg';

          card.innerHTML = `
            <a href="#" class="wildlife-image-link">
              <img src="${fullImage}" alt="${item.species}" data-full="${fullImage}" />
            </a>
            <div class="wildlife-details">
              <h4>${item.species}</h4>
              <p><strong>Scientific Name:</strong> ${item.scientific_name || 'N/A'}</p>
              <p><strong>Class:</strong> ${item.class || 'N/A'}</p>
              <p><strong>Order:</strong> ${item.order || 'N/A'}</p>
              <p><strong>Family:</strong> ${item.family || 'N/A'}</p>
              <p><strong>Kingdom:</strong> ${item.kingdom || 'N/A'}</p>
              <p><strong>Region:</strong> ${item.state_province || 'N/A'}</p>
              <p><strong>Observed:</strong> ${item.date_observed || 'N/A'}</p>
              <p><strong>Observer:</strong> ${item.recorded_by || 'Unknown'}</p>
              <p><strong>Institution:</strong> ${item.institution || 'N/A'}</p>
            </div>
          `;
          wildlifeContainer.appendChild(card);
        });
        setupImageModal();
      }

      // --- States Data ---
const statesRes = await fetch(`/api/states/${countryCode}`);
  if (!statesRes.ok) throw new Error("Failed to fetch states");

  const statesData = await statesRes.json();
  const states = statesData.states || [];

  const statesGrid = document.getElementById("statesGrid");
  const statesCount = document.getElementById("totalStates");

  if (!states.length) {
    statesCount.textContent = "No states or territories found.";
    return;
  }

  // Sort alphabetically
  states.sort((a, b) => a.name.localeCompare(b.name));

  // Update total count
  statesCount.textContent = `Total States: ${states.length}`;

  // Generate cards
  states.forEach(state => {
    const card = document.createElement("div");
    card.className = "state-card";
    card.title = `Lat: ${state.lat}, Lon: ${state.lon}`;

    card.innerHTML = `
      <a href="/api/cities/${countryCode}/${state.isoCode}" class="state-link">
        ${state.name}
      </a>
    `;

    statesGrid.appendChild(card);
  });


    } catch (err) {
      console.error(err);
      document.getElementById("climateInfo").textContent = "Error loading climate.";
      document.getElementById("wildlifeInfo").textContent = "soon we add data of biodiversity .";
      const statesCount = document.getElementById("totalStates");
      if (statesCount) statesCount.textContent = "soon we add data of states.";
    }
  }

// 
  
function setupImageModal() {
    document.querySelectorAll(".wildlife-image-link img").forEach(img => {
      img.addEventListener("click", function (e) {
        e.preventDefault();
        const modal = document.getElementById("imageModal");
        const modalImg = document.getElementById("modalImg");
        modal.style.display = "block";
        modalImg.src = this.dataset.full;
      });
    });

    document.querySelector(".image-modal .close").addEventListener("click", () => {
      document.getElementById("imageModal").style.display = "none";
    });
  }

  fetchExtraInfo();

  const modal = document.getElementById("modal");
  const modalImage = document.getElementById("modalImage");
  const flagImage = document.getElementById("flagImage");
  const closeBtn = document.getElementsByClassName("close")[0];

  // Open modal when flag image is clicked
  flagImage.onclick = function() {
    modal.style.display = "block";
    modalImage.src = this.src;
  };

  // Close modal when the close button is clicked
  closeBtn.onclick = function() {
    modal.style.display = "none";
  };

  // Also close modal if user clicks outside the image
  window.onclick = function(event) {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  };
</script>

  
  <div id="imageModal" class="image-modal">
  <span class="close">&times;</span>
  <img class="modal-content" id="modalImg" />
</div>
</body>
</html>
